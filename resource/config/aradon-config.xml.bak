<?xml version="1.0"  encoding="UTF-8"?>

<root>

	<import path="resource/config/dev-config.xml" ></import>
	<import path="resource/config/bleujin-config.xml" ></import>
	<import path="resource/config/heeya-config.xml" ></import>

	<section name="">
		<path name="default">
			<urls></urls>
			<description>Default</description>
			<handler class="net.ion.radon.impl.let.common.HelloWorldLet" scope="request" />
		</path>
		
		<path name="index">
			<context>
				<attribute id="target.reference">/common/resource/samplesite/webapps/simple/index.htm</attribute>
				<attribute id="redirector.mode">3</attribute>
			</context>
			<urls>index</urls>
			<description>Redirect : 
				MODE_CLIENT_PERMANENT : 1
				MODE_CLIENT_FOUND : 2
				MODE_CLIENT_SEE_OTHER : 3
				MODE_CLIENT_TEMPORARY : 4
				MODE_SERVER_OUTBOUND : 6
				MODE_SERVER_INBOUND : 7
				
				</description>
			<handler class="net.ion.radon.impl.let.common.RedirectLet" scope="request" />
		</path>
		
		<path name="favicon.ico">
			<context>
				<attribute id="target.reference">/common/resource/samplesite/myfavi.ico</attribute>
				<attribute id="redirector.mode">3</attribute>
			</context>
			<urls>favicon.ico</urls>
			<handler class="net.ion.radon.impl.let.common.RedirectLet" scope="request" />
		</path>
	</section>



	<section name="common">
		<path name="resource">
			<description>
					base.dir : required : false(default : .)
					zip.suffix.order : required : false(default : zip)
			</description>
			<context>
				<attribute id="base.dir">./resource/</attribute>
				<attribute id="zip.suffix.order">zip,jar</attribute>
			</context>
		
			<urls matchmode="STARTWITH">/resource/{name}</urls>
			<handler class="net.ion.radon.impl.let.common.ResourceLet" />
		</path>
				

		<path name="dir">
			<context>
				<attribute id="base.dir">./resource/imsi/</attribute>
			</context>
			<urls matchmode="STARTWITH">/dir</urls>
			<handler class="net.ion.radon.impl.let.common.DirLet" />
		</path>


		<path name="sendmail">
			<urls>/sendmail</urls>
			<description> required : to, from, subject, content</description>
			<context>
					<attribute id="smtp.config.host">smtp.i-on.net</attribute>
					<attribute id="smtp.config.port">25</attribute>
					<attribute id="smtp.config.userid">bleujin@i-on.net</attribute>
					<attribute id="smtp.config.password">******</attribute>
			</context>			
			<handler class="net.ion.radon.impl.let.common.SendMailLet" />
		</path>
		


		<path name="treelore">
			<urls matchmode="STARTWITH">/tree/{target}/{workspace}</urls>
			<description>target = self | child</description>
			
			<prefilter class="net.ion.radon.impl.filter.SampleChallengeFilter" />
			
			<handler class="net.ion.radon.impl.let.common.TreeLoreLet" />
		</path>

	</section>

	<!--  pre-defined service -->
	<section name="system">
		<context>
			<attribute id="section.system.message.hi">Hello</attribute>
			<attribute id="section.system.message.admin.email">bleujin</attribute>
		</context>

		<path name="repository">
			<urls>/repository/{workspace}/{id}, /repository/{workspace}</urls>
			<description>
				parameter name : undefined, type : json
				method : GET, POST(create), DELETE, PUT(update)
			</description>
			<handler class="net.ion.radon.impl.let.system.RepositoryLet" />
		</path>

		<path name="lore">
			<urls>/lore/{workspace}/{groupid}/{sort}/{uid}, /lore/{workspace}/{groupid}/{sort}, /lore/{workspace}/{groupid}</urls>
			<description>
				parameter name : undefined, type : json
				method : GET, POST(create), DELETE, PUT(update)
			</description>
			<handler class="net.ion.radon.impl.let.system.LoreLet" />
		</path>

		<path name="file">
			<urls>/file/{oid}, /file</urls>
			<context>
					<attribute id="base.path">/aradon/data/file</attribute>
					<attribute id="base.limit.size">10000</attribute>
			</context>
			<description>
				parameter
				method : GET, POST(create), DELETE, PUT(update)
			</description>
			<handler class="net.ion.radon.impl.let.system.FileLet" />
		</path>

		<path name="sequence">
			<urls>/sequence/{seqId}, /sequence/{seqId}/{num}</urls>
			<description>
				parameter name : 
				method : GET, POST(reset), DELETE, PUT(update)
			</description>
			<handler class="net.ion.radon.impl.let.system.SequenceLet" />
		</path>

		<path name="reference">
			<urls>/reference/{from}/{type}/{to}, /reference/{from}/{type}, /reference/{from}</urls>
			<description>
				parameter name : 
				method : GET, POST(set), DELETE
			</description>
			<handler class="net.ion.radon.impl.let.system.ReferenceLet" />
		</path>

		<path name="utils">
			<urls>/utils/{method}</urls>
			<description>
				{method} : datetime,unique
				method : GET
			</description>
			<handler class="net.ion.radon.impl.let.system.UtilsLet" />
		</path>
		
		<path name="lets">
			<urls>/lets</urls>
			<handler class="net.ion.radon.impl.let.system.Lets" />
		</path>

		<path name="index">
			<urls>/index/{groupid}/{docid}</urls>
			<context>
					<attribute id="let.index.name">aradon.search.engine</attribute>
			</context>			
			<handler class="net.ion.radon.impl.let.search.IndexLet" />
		</path>

		<path name="search">
			<urls>/search/{groupid}/{query}, /search/{groupid}/{query}/{sort} , /search/{groupid}/{query}/{sort}/{direction} </urls>
			<context>
					<attribute id="let.search.name">aradon.search.engine</attribute>
			</context>			
			<handler class="net.ion.radon.impl.let.search.SearchLet" />
		</path>

	</section>


	
	<repository cmd="./mongo/win32-x86_32/bin/mongod" dbname="test">
		<properties>
	
	###### Basic database configuration

	# Location of the database files 
	dbpath=/aradon/data/db
	
	# Port the mongod will listen on 
	port=27017
	
	# Full filename path to where log messages will be written 
	# logpath=/aradon/temp/log
	
	# Whether the log file will be appended (TRUE) or over-written (FALSE)
	# logappend=true 
	
	
	
	###### Loggging
	
	# Enable periodic logging (TRUE) of CPU utilization and I/O wait 
	# cpu = true
	
	# Verbose logging output 
	# verbose=true 
	
	###### Security
	
	# Turn authorization on/off. Off is currently the default 
	# noauth = true 
	
	# Turn authorization on/off. Off is currently the default 	
	# auth=false
	
	
	###### Administration and Monitoring
	
	# Disable the HTTP interface. The default port is 1000 more than the dbport 	
	# nohttpinterface = true
	
	# Turns off server-side scripting. This will result in greatly limited functionality 	
	# noscripting = true
	
	# Turns off table scans. Any query that would do a table scan fails. 	
	# notablescan = true
	
	# Disable data file preallocation. 	
	# noprealloc = true
	
	# Specify .ns file size for new databases in MB 
	nssize = 32
	
	# Account token for Mongo monitoring server. 	
	# mms-token=mytoken
	
	# 	Server name for Mongo monitoring server. 	
	# mms-name=monitor.example.com
	
	# Ping interval for Mongo monitoring server in seconds. 	
	# mms-interval=15 

		</properties>
		<init class="net.ion.radon.impl.NoActionInit" />
	</repository>


	<context>
		<attribute id="let.contact.email">bleujin@i-on.net</attribute>
		<attribute id="let.contact.help.doc">/help/doc</attribute>

		<connection id="connection.oracle.bleujinOracle">
			<database-controller>
			<controller-name>bleujinOracle</controller-name>
	        <database-manager>
	            <description>Oracle database manager</description>
	            <configured-object>
	                <class-name>net.ion.framework.db.manager.OracleCacheReleaseDBManager</class-name>
	                <constructor>
	                    <constructor-param>
	                        <description>jdbc URL</description>
	                        <type>java.lang.String</type>
	                        <value>jjdbc:oracle:thin:@dev-test.i-on.net:1521:devTest</value>
	                    </constructor-param>
	                    <constructor-param>
	                        <description>User</description>
	                        <type>java.lang.String</type>
	                        <value>bleu</value>
	                    </constructor-param>
	                    <constructor-param>
	                        <description>Passwd</description>
	                        <type>java.lang.String</type>
	                        <value>redf</value>
	                    </constructor-param>
	                    <constructor-param>
	                        <description>ConnectionLimit</description>
	                        <type>int</type>
	                        <value>5</value>
	                    </constructor-param>
	                </constructor>
	            </configured-object>
	
	        </database-manager>
	        <limited-rows>10000</limited-rows>
	        <extra-servant>
	            <configured-object>
	                <class-name>net.ion.framework.db.servant.StdOutServant</class-name>
	                <constructor>
	                    <constructor-param>
	                        <description>show std out (userProcedure : 1, userCommand : 2, userProcedureBatch : 4, userProcedures : 8 )</description>
	                        <type>int</type>
	                        <value>15</value>
	                    </constructor-param>
	                </constructor>
	            </configured-object>
	        </extra-servant>
    		</database-controller>
		</connection>
		
	</context>
	
	
	<prefilter class="net.ion.radon.impl.filter.SayHello">
	</prefilter>

	<afterfilter class="net.ion.radon.impl.filter.SayHello">
	</afterfilter>

		
	<plugin includepath="lib/aradon/default/;lib/aradon/extend/;lib/aradon/bin/;">
		<jar src="exts/employee1.jar" />
	</plugin>
	
</root>